apply plugin: 'java'
apply plugin: 'eclipse'

group = 'com.tooltwist'
version = '1.0-SNAPSHOT'
sourceCompatibility = 1.7

repositories {
ivy {
    url "file:/${localRepo}"
    layout "maven"
}
mavenCentral()
}

//----------------------------------------------------------------------
// Gradle lacks the "provided" dependency so we'll have to add it.
// http://blog.codeaholics.org/2012/emulating-mavens-provided-scope-in-gradle/
configurations {
provided
}
sourceSets {
    main.compileClasspath += configurations.provided
    test.compileClasspath += configurations.provided
    test.runtimeClasspath += configurations.provided
}
//eclipse.classpath.plusConfigurations += configurations.provided

//----------------------------------------------------------------------
dependencies {
   
    compile 'com.tooltwist:tooltwist:8.3.1-20140404'  
    compile 'com.tooltwist:ttStd:8.3.1-20140404'  
    compile 'com.tooltwist:ttWbd:8.3.1-20140404'
    compile 'com.tooltwist:ttsec-standaloneDesigner:8.3.1-20140404'

	//Dependencies
	//compile group: 'org.xhtmlrenderer', name: 'core-renderer', version: 'R8pre2'
	compile group: 'javax.xml', name: 'jaxrpc', version: '1.1'
	compile group: 'org.apache.axis2', name: 'axis2', version: '1.5.4'
	compile group: 'commons-discovery', name: 'commons-discovery', version: '0.2'
	compile group: 'com.sun.xml.ws', name: 'webservices-rt', version: '2.1-b16'
	compile group: 'com.sun.jersey', name: 'jersey-core', version: '1.18.1'
	compile group: 'com.sun.jersey', name: 'jersey-server', version: '1.4' 

	
    // This jar contains stubs used only while compiling. At runtime the
    // web server (e.g. Tomcat) provides the real implementation of the API.
    provided 'javax:javaee-api:6.0'

    // Used only during unit testing
    testCompile group: 'junit', name: 'junit', version: '4.8.2'
}


//----------------------------------------------------------------------
//  Copy extra resources into the jar file
//
processResources {
}
processResources.dependsOn("copyWebContent")
processResources.dependsOn("copyConfig")
processResources.dependsOn("copyWidgets")
task copyWebContent(type: Copy) {
    from('WebContent')
    into 'build/classes/main/META-INF/resources'
}
task copyConfig(type: Copy) {
    from('config')
    into 'build/classes/main/META-INF/skyportal/config'
}
task copyWidgets(type: Copy) {
    from('widgets')
    into 'build/classes/main/META-INF/skyportal/widgets'
}

//----------------------------------------------------------------------
//  Upload the jar file to the repo
//
uploadArchives {
    repositories {
    ivy {
        url "file:/${localRepo}"
        layout "maven"
    }
    }
}
